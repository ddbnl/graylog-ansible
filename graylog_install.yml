- hosts: graylog
  connection: local
  become: yes
  become_user: root
  vars_prompt:
    - name: "password"
      prompt: "Enter 'admin' user password"
      private: yes
      default: graylog
    - name: "gl_ip"
      prompt: "IP for graylog server? (defaults to system IP)"
      private: no
    - name: "es_memory"
      prompt: "Change memory committed to elasticsearch process (in MBs)"
      private: no
    - name: "gl_memory"
      prompt: "Change memory committed to graylog process (in MBs)"
      private: no
  tasks:
  - name: "Install requirement - apt-transport-https"
    apt:
      name: "apt-transport-https"
      update_cache: true
      state: present

  - name: "Install requirement - openjdk-8-jre-headless"
    apt:
      name: "openjdk-8-jre-headless"
      update_cache: true
      state: present

  - name: "Install requirement - uuid-runtime"
    apt:
      name: "uuid-runtime"
      update_cache: true
      state: present

  - name: "Install requirement - pwgen"
    apt:
      name: "pwgen"
      update_cache: true
      state: present

  - name: "Mongodb - Add repo key"
    apt_key:
      keyserver: hkp://keyserver.ubuntu.com:80
      id: 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5
      state: present

  - name: "Mongodb - Add repo"
    apt_repository:
      repo: deb https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6 multiverse
      state: present

  - name: "Mongodb - Install package"
    apt:
      name: "mongodb-org"
      update_cache: true
      state: present

  - name: "Mongodb - Configure mongodb service"
    service:
      name: "mongod"
      enabled: yes
      state: started

  - name: "Elasticsearch - Add repo key"
    apt_key:
      url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
      state: present

  - name: "Elasticsearch - Add repo"
    apt_repository:
      repo: deb https://artifacts.elastic.co/packages/5.x/apt stable main
      state: present

  - name: "Elasticsearch - Install package"
    apt:
      name: "elasticsearch"
      update_cache: true
      state: present
    notify:
     - Elasticsearch - restart service

  - name: "Elasticsearch - Configure java path"
    replace:
      path: /etc/default/elasticsearch
      regexp: JAVA_HOME=$
      replace: JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
    notify:
     - Elasticsearch - restart service

  - name: "Elasticsearch - Configure initial heap size "
    when: es_memory is defined
    lineinfile:
      path: /etc/elasticsearch/jvm.options
      regexp: '(?!.*-Xms{{ es_memory }}m)^-Xms\d+?[gm]'
      line: "-Xms{{ es_memory }}m"
      state: present
    notify:
     - Elasticsearch - restart service

  - name: "Elasticsearch - Configure maximum heap size "
    when: es_memory is defined
    lineinfile:
      path: /etc/elasticsearch/jvm.options
      regexp: '(?!.*-Xmx{{ es_memory }}m)^-Xmx\d+?[gm]'
      line: "-Xmx{{ es_memory }}m"
      state: present
    notify:
     - Elasticsearch - restart service

  - name: "Elasticsearch - Configure service"
    service:
      name: "elasticsearch"
      enabled: yes
      state: started
    notify:
     - Elasticsearch - restart service

  - name: "Graylog - Get package"
    apt:
      deb: https://packages.graylog2.org/repo/packages/graylog-2.4-repository_latest.deb
      update_cache: true
      state: present

  - name: "Graylog - Install package"
    apt:
      update_cache: true
      name: "graylog-server"
      state: present
    notify:
     - Graylog - restart service

  - name: "Graylog - Generate password secret"
    command: pwgen -N 1 -s 96
    register: password_secret

  - name: "Graylog - Generate admin password hash"
    shell: "{{ password }} | shasum -a 256"
    register: sha_password

  - name: "Graylog - Configure password secret"
    replace:
      path: /etc/graylog/server/server.conf
      regexp: ^password_secret =$
      replace: "password_secret = {{ password_secret.stdout }}"
    notify:
     - Graylog - restart service

  - name: "Graylog - Configure admin password hash"
    replace:
      path: /etc/graylog/server/server.conf
      regexp: "(?!.*{{ sha_password.stdout.split(' ')[0] }})^root_password_sha2 .+$"
      replace: "root_password_sha2 = {{ sha_password.stdout.split(' ')[0] }}"
    notify:
     - Graylog - restart service

  - name: "Graylog - Configure rest_listen_uri"
    replace:
      path: /etc/graylog/server/server.conf
      regexp: "^(?!.*{% if gl_ip %}{{ gl_ip }}{% else %}{{ ansible_default_ipv4.address }}{% endif %})^rest_listen_uri =.+$"
      replace: "rest_listen_uri = http://{% if gl_ip %}{{ gl_ip }}{% else %}{{ ansible_default_ipv4.address }}{% endif %}:9000/api/"
    notify:
     - Graylog - restart service

  - name: "Graylog - Configure web_listen_uri"
    replace:
      path: /etc/graylog/server/server.conf
      regexp: "^(?!.*{% if gl_ip %}{{ gl_ip }}{% else %}{{ ansible_default_ipv4.address }}{% endif %})^web_listen_uri =.+$"
      replace: "web_listen_uri = http://{% if gl_ip %}{{ gl_ip }}{% else %}{{ ansible_default_ipv4.address }}{% endif %}:9000/api/"
    notify:
     - Graylog - restart service

  - name: "Graylog - Configure initial memory"
    when: gl_memory is defined
    replace:
      path: /etc/default/graylog-server
      regexp: '(?!.*-Xms{{ gl_memory }}m)-Xms\d+?[gm]'
      replace: "-Xms{{ gl_memory }}m"
    notify:
     - Graylog - restart service

  - name: "Graylog - Configure maximum memory"
    when: gl_memory is defined
    replace:
      path: /etc/default/graylog-server
      regexp: '(?!.*-Xmx{{ gl_memory }}m)-Xmx\d+?[gm]'
      replace: "-Xms{{ gl_memory }}m"
    notify:
     - Graylog - restart service

  - name: "Graylog - Configure service"
    service:
      name: "graylog-server"
      enabled: yes
      state: started
    notify:
     - Graylog - restart service

  handlers:
  - name: "Elasticsearch - Restart service"
    service:
      name: "elasticsearch"
      state: restarted

  - name: "Graylog - Restart service"
    service:
      name: "graylog-server"
      state: restarted


